git clone git@github.com:fgalliat/BasicAr.git



=================================================================
Xts uPocket V2

ADDITIONAL INPUTS
 pin 33 as INPUT_PULLUP for [A] BTN (has to put one of the btn pin to GND)
 pin 32 as INPUT        for MP3_READY interupt line (DFPlayer mini) 

 then allow to read these pins in BASIC in order to make NEXTable MP3 Player PRGM


DRAWPCT "toto", x, y -- to draw a 16b bitmap
   --> header : monochrome bitmap / color bitmap / vector drawing
                width / height


DATAF "titi", "A$", "B", "C", "D$", "E"
  reads titi.BAD (1 line for row count (arrays DIM) / the rest is CSV-like)
  then feeds typed arrays ~like DATA cmd does

  [3
  [# optionally remark line, can be col. names (not counted)
  [Rolph;20;10;Barbarian;1
  [Mula;15;15;Elf;2
  [Grumph;50;10;Dragon;3

  currently : DIRARRAY uses the following code :

        #define MAX_FILE_IN_ARRAY 128
        if ( ! xts_createArray("DIR$", 1, MAX_FILE_IN_ARRAY) ) {
          host_outputString("Could not create DIR$");
          return false;
        }


=================================================================


les Teensy ne supportent pas bien le PROGMEM et une grande consomation memoire
il est impossible de faire cohabiter les PROGMEM pgm_read... et l'utilisation de SD.h ou SdFat.h
du moins avec mon code de compatibilitÃ©

1) remettre un marqueur vierge et des fonctions vides pour l'acces aux datas (pour pouvoir les refaire marcher avec un Arduino)

=================================================================

TODO
  > regression tests (manually @ this time....)

  > self(hardware) tests (stored in ~PROGMEM~) !!!!!!

  VGA Serial Monitor drivers (on spe SerialX) (start to impl. fileIO descr)
   L console command --> args to add to manage # cases => TO FINSIH
   L when change output console -> recompute SCREEN_WIDTH, SCREEN_HEIGHT, SCREEN_MEM[] => DONE
   L beware w/ 1st Board boot

_________ 

_________
  LSAVE to recev. ASCII PRGM from Serial & save it to SDCard (as LLIST) => TODO

  factorise file-extension-completion code (for .T5K, .T53, .BPP, .BAS) => TO COMPLETE
                                                  |     |     |    \__ LOAD,SAVE,DELETE [v]
                                                  |____/       \_ DRAWBPP [v]
                                                    \___ TODO

  FILES as DIR alias + filter ex. "*.BAS" ---> in ARRAY storing function
    ^
    |---- try to make a full-featured file managment
    v
  SD2SR -> SDCard to Serial to dump any file (even bin files) (need more than 8 char filename)  \__ use Xon/Xoff
  SR2SD -> Serial to SDCard to fetch any file (even bin files) (need more than 8 char filename) /   + header (fname + flen)

  BT Serial support (HC06 see if can change pin code)
   \___ setPinCode
        start / stop
        use as aux/main Console

  OPEN/CLOSE WRITE/READ for files ... (lookat X07 routines -> OUTCHAR, INPUT ...)
_________

  ~Serial (& BT) output => screen mode / stream mode
    \__ Cf use charsMem or just println() (no LOCATE/POSITION, ...)

  DUMP -> disp mem content (hex or raw)

================================================================

basic.cpp :: stackPushNum() & stackPopNum()
             -> was using direct pointers translation to float
             -> replaced by my impl. that also test BigEndian ... >>> WORKS 

make a mem2float(unsigned char* cur, unsigned char* src) function
  {  int addr = &(cur[0]) - &(src[0]);  } where cur can be 'p' & src 'mem'
 ===> DONE

en fait ce sont tout les FOR qui ne passent plus (pour la meme raison...)
  FOR I=1 TO 5 : PRINT "coucou";I : NEXT I ==> WORKS
 ==> FIXED


15 PRINT INT( RND * 10 ) ==> WORKS

DIM a(5)
FOR I=1 TO 5 : a(i) = rnd : NEXT I
FOR I=1 TO 5 : ? i;" ";a(i) : NEXT I
==> WORKS


================================================================
ZX81 is 32x24 chars // 64x48 pixels
================================================================
DONE
  STORAGE (SDCARD SPI) + SAVE/LOAD/DELETE
  
  PLAYT5K & PLAYT53 routines (need storage)
        PLAYT53 & PLAYT5K 
          \__ auto add file extension if not provided => DONE

  BYE command that reset MCU (arch dependant) (as SimpleCmd)
  
  anyBtn()

  ? BTN( 1 ) ==> {0;1} (to get pressed state of btn#1) 
     \=> BTN(0) to get 0,1,2,4 => MASK of 3btns @ same time

  DELAY( 500 ) => sleep 500ms => host_sleep(x)

  Continuous displaying programs
   10 ? "coucou"
   20 GOTO 10

  ECHO locks local echo on current output decice (LCD,SER, ....) when sending prgm via serial !!!!

  LOAD PRGM from SDCard <Source Code> => DONE : able to load ascii source from SDFile to cur PRGM (no NEW needed (cf reset()))
  SAVE PRGM to   SDCARD               => DONE : able to save cur PRGM (ascii source) to SDFile
  DELETE                              => DONE (@ least for .BAS files...)
   L LATER from SDCard <Tokens>
   L after that : impl. SAVE as ASCII(ok) or TOKENS(todo)
  MAX_IDENT_LEN -> only 8 chars for filenames /!\ /!\ ==> should be fixed now
  have to #define a MAX_FILENAME_LEN 12 // 8+1+3 => DONE, now : have to use it
  see basic.cpp :: int parseLoadSaveCmd() {...} ==> DONE => should be ok now


  #define ASCII_CODELINE_SIZE for save,load,llist,lsave => DONE
  LLIST to send (SDCard (if filename provided) or current( from mem[]) ) PRGM ascii src to Serial(w/o scrolling control) => DONE

  DRAWBPP "<file>" => 1KB .BPP picture file display 
    DRAW FCTs (SSD1306 I2C) (+Pictures)

  ADDED filter for DIR ex. "*.BAS"

  Serial Vs Screen+Kbd I/O => console mode
  SCREEN procedures + [draw pictures (neeed storage acess) : done]


TODO HARDWARE
  Look @ XtsuBasic Hardware port mapping
  SSD1306 OLED full support (w/ gfx)          [v]
  KBD USB                                     [v] GetKey to finish !!!!
  BT Serial (HC06 slave only)                 [ ]
  VGA Serial Monitor (& RPI0W HDMI Monitor)   [v~]

TODO

  exisiting PIN FCT to look
  DIR to ARRAY

  checkbreak() -- to finish
  

NEW COMMANDS
  1234568
  LOCATE   [v] ==> stdout     (Serial or Serial VGA Monitor ( or RPI0W ) ) (OUT_DEVICE)
  GLOCATE  [ ] ==> LCD screen (builtin OLED) (GFX_DEVICE)
  PRINT    [v]
  GPRINT   [ ]
  CLS      [v]
  GCLS     [ ]
______________________________________________________________
IN PROGRESS 
  pseudo file I/O

  Serial In     | Serial Out
  KeyUSB        | OLED screen (TEXT + GFX) (8 x 21)
                | Serial VGA Monitor (TEXT) (50 * 90-100)
  BT Serial In  | BT Serial Out
  RPI In        | RPI Out (TEXT + GFX)
  --------------+--------------------------
  ESP8266 In    | ESP8266 Out


  On Plug Prompt -> "Plug Serial, Type Ctrl-C or press button"
                           \             \          \____ BT
                            \             \__ KeyUSB + { OLED, VGA Monitor }
                             \__ Serial

______________________________________________________________
______________________________________________________________

ADDED >> ' for REM
         ? for PRINT
         MEM function to get free mem ammount ----------> <*> shortcut to display it
         
         LOCATE ROW,COL
         Better teensy IRQ managment
         FS_SUPPORT for Teensy3.6
         DIR/FILES (in progress)
         SAVE/LOAD/LLIST
         CHAIN

         MUTE (toggle mute buzzer)
         BEEP 100,2
         PLAY "ABC#"
         PLAYT5K & PLAYT53 : to play audio files

         DRAWBPP : display a 1bpp picture to builtin screen
         
         BTN(x) : function get button state
         LED [1..3], {0,1}
         
         ECHO {0;1}
         BYE : to reset the MCU
         DELAY x : wait x msec

         + ... (see README.md)


CURRENTLY :
 AND,OR, NOT,MOD
 PRINT -----------------------> <?> shortcut
 CLS
 LIST,RUN
 GOTO,GOSUB,RETURN,
 REM, ------------------------> <'> shortcut
 STOP,CONT,PAUSE
 INPUT, INKEY$ // INKEY$ : non blocking key listening ....
 IF,THEN
 FOR,TO,STEP,NEXT
 VAL()
 INT(),RND // int(1.5) -> rounds to 1 / rnd() -> returns between 0.00 & 1.00
 STR$() // STR$(1) => "1" (allows string concat)
 LEN(), // LEN("abc") => 3 
 RIGHT$(),MID$(),LEFT$(),
 POSITION, 
 LET,DIM,
 PIN, PINMODE,PINREAD,ANALOGRD
 SAVE,LOAD,NEW
 DIR,DELETE ---------------> TODO : FILES as DIR alias


TEENSY 3.2 redirecting SPI SCK :
  SPI.setSCK(14);       // alternate SCK on pin 14
  //SPI.setSCK(13);       // default SCK on pin 13 - this is the LED pin !!!!!
  SPI.setMOSI(11);      // MOSI on pin 11 ....
  SPI.begin();



______________________________________________________________

basic.cpp => add a token descr in tokenTable

basic.h   => add a TOKEN_<xx> yy ++ FIX : LAST_IDENT_TOKEN

basic.cpp => ex. in parsePrimary() (depending flag used in descriptor)
             case TOKEN_RND:	
                return parse_RND();

xtase_fct.h => impl. parse_RND()


______________________________________________________________
Robin Edwards - robin.edwards@gmail.com (Sam 16 Sept 17)

Hi, I am Franck GALLIAT (Xtase),
I currently building a Teensy 3.6 based computer :

 > https://hackaday.io/project/19223-xts-ubasic <
 > http://xtase.over-blog.com/2017/01/xts-ubasic.html <

And I tried to write my own BASIC, but I didn't had the
good approach.

Your code (https://github.com/robinhedwards/ArduinoBASIC)
does really interest me (even if I have not the same hardware
layout).

I was wondering if I could post a modified version of
your work on GitHub (& mention you in copyright comments)

Thanks in advance.

Franck GALLIAT (Xtase)