git clone git@github.com:fgalliat/BasicAr.git


les Teensy ne supportent pas bien le PROGMEM et une grande consomation memoire
il est impossible de faire cohabiter les PROGMEM pgm_read... et l'utilisation de SD.h ou SdFat.h
du moins avec mon code de compatibilitÃ©

1) remettre un marqueur vierge et des fonctions vides pour l'acces aux datas (pour pouvoir les refaire marcher avec un Arduino)
2) remettre le code du reset de la MCU pour le teensy (in progress) (DONE)
3) separer les FS_SUPPORT en mode SDFAT ou non


LOCATE , LED, .. could goes into : parseTwoIntCmd()

================================================================

basic.cpp :: stackPushNum() & stackPopNum()
             -> was using direct pointers translation to float
             -> replaced by my impl. that also test BigEndian ... >>> WORKS

10 print "123456"
20 GOTO 10 -------------> works

but num var manips doesn't !!!!! --> look @ float2mem routine calls
    str            are OK

15 PRINT INT( RND * 10 )


================================================================
DONE
  STORAGE (SDCARD SPI)
  
  PLAYT5K & PLAYT53 routines (need storage)
        PLAYT53 & PLAYT5K 
          \__ auto add file extension if not provided => DONE

  BYE command that reset MCU (arch dependant) (as SimpleCmd)
  
  anyBtn()

  ? BTN( 1 ) ==> {0;1} (to get pressed state of btn#1) 
     \=> BTN(0) to get 0,1,2,4 => MASK of 3btns @ same time

  lock local echo when sending prgm via serial !!!!

TODO
 find why need :
 10 ? "coucou" : goto 20
 20 goto 10 
 ?????

10 ? "coucou"
20 A=1
30 LED A,1 : LED A-1,0
40 IF BTN(0) <> 0 THEN GOTO 1000
50 A=A+1 : IF A > 3 THEN A = 0
60 GOTO 30
1000 ? "Bye"



TODO HARDWARE
  Look @ XtsuBasic Hardware port mapping
  SSD1306 OLED full support (w/ gfx)
  KBD USB
  BT Serial (HC06 slave only)
  VGA Serial Monitor (& RPI0W HDMI Monitor)

TODO
  DELAY( 500 ) => sleep 500ms => host_sleep(x)

  Continuous displaying programs
   10 ? "coucou"
   20 GOTO 10

  ADD filter for FILES ex. "*.BAS"

  LOAD/SAVE

  exisiting PIN FCT to look
  DRAW FCT (SSD1306 I2C) (Pictures requires STORAGE)
  Serial Vs Screen+Kbd I/O => console mode
  
  SCREEN procedures + draw pictures (neeed storage acess)
  DIR to ARRAY
  checkbreak()
  

NEW COMMANDS
  1234568
  LOCATE   [v] ==> stdout     (Serial or Serial VGA Monitor ( or RPI0W ) )
  SLOCATE  [ ] ==> LCD screen (builtin OLED)
  PRINT    [v]
  SPRINT   [ ]
  CLS      [v]
  SCLS     [ ]
______________________________________________________________
IN PROGRESS 
  pseudo file I/O

  Serial In     | Serial Out
  KeyUSB        | OLED screen (TEXT + GFX) (8 x 21)
                | Serial VGA Monitor (TEXT) (50 * 90-100)
  BT Serial In  | BT Serial Out
  RPI In        | RPI Out (TEXT + GFX)
  --------------+--------------------------
  ESP8266 In    | ESP8266 Out


  On Plug Prompt -> "Plug Serial, Type Ctrl-C or press button"
                           \             \          \____ BT
                            \             \__ KeyUSB + { OLED, VGA Monitor }
                             \__ Serial

______________________________________________________________


host_showBuffer() dans host.cpp


10 DIM a$(5)         
20 FOR i=1 TO 5      
30 a$(i)="Hello "+STR$(i)                 
40 PRINT a$(i)       
50 NEXT i   

that works !!!

______________________________________________________________

ADDED >> ' for REM
         ? for PRINT
         MEM function to get free mem ammount ----------> <*> shortcut to display it
         PLAY "ABC#"
         TONE 100,2
         LOCATE ROW,COL
         LED [1..3], {0,1}
         MUTE routine (toggle mute buzzer)
         FS_SUPPORT for Teensy3.6
         Better teensy IRQ managment
         DIR/FILES (in progress)
         PLAYT5K & PLAYT53 : to play audio files
         BYE : to reset the MCU
         BTN(x) : function get button state



CURRENTLY :
 AND,OR, NOT,MOD
 PRINT -----------------------> <?> shortcut
 CLS
 LIST,RUN
 GOTO,GOSUB,RETURN,
 REM, ------------------------> <'> shortcut
 STOP,CONT,PAUSE
 INPUT, INKEY$ // INKEY$ : non blocking key listening ....
 IF,THEN
 FOR,TO,STEP,NEXT
 VAL()
 INT(),RND() // int(1.5) -> rounds to 1 / rnd() -> returns between 0.00 & 1.00
 STR$() // STR$(1) => "1" (allows string concat)
 LEN(), // LEN("abc") => 3 
 RIGHT$(),MID$(),LEFT$(),
 POSITION, 
 LET,DIM,
 PIN, PINMODE,PINREAD,ANALOGRD
 SAVE,LOAD,NEW
 DIR,DELETE ---------------> TODO : FILES as DIR alias


TEENSY 3.2 redirecting SPI SCK :
  SPI.setSCK(14);       // alternate SCK on pin 14
  //SPI.setSCK(13);       // default SCK on pin 13 - this is the LED pin !!!!!
  SPI.setMOSI(11);      // MOSI on pin 11 ....
  SPI.begin();



______________________________________________________________

basic.cpp => add a token descr in tokenTable

basic.h   => add a TOKEN_<xx> yy ++ FIX : LAST_IDENT_TOKEN

basic.cpp => ex. in parsePrimary() (depending flag used in descriptor)
             case TOKEN_RND:	
                return parse_RND();

xtase_fct.h => impl. parse_RND()


______________________________________________________________
Robin Edwards - robin.edwards@gmail.com (Sam 16 Sept 17)

Hi, I am Franck GALLIAT (Xtase),
I currently building a Teensy 3.6 based computer :

 > https://hackaday.io/project/19223-xts-ubasic <
 > http://xtase.over-blog.com/2017/01/xts-ubasic.html <

And I tried to write my own BASIC, but I didn't had the
good approach.

Your code (https://github.com/robinhedwards/ArduinoBASIC)
does really interest me (even if I have not the same hardware
layout).

I was wondering if I could post a modified version of
your work on GitHub (& mention you in copyright comments)

Thanks in advance.

Franck GALLIAT (Xtase)